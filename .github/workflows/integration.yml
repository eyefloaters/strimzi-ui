name: Build
on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]
    types: [ opened, reopened, synchronize ]

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Test
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_ORG: ${{secrets.SONAR_ORG}}
          SONAR_PROJECT: ${{secrets.SONAR_PROJECT}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: |
          #
          # Set write-transformed-bytecode-to-build-output for IT coverage. Do NOT use the container image
          # created by this step.
          #
          # See: https://quarkus.io/guides/tests-with-coverage#coverage-for-integration-tests
          #
          mvn verify -Pdocker -B --no-transfer-progress \
            -Dquarkus.package.write-transformed-bytecode-to-build-output=true \
            -Dquarkus.docker.buildx.platform=linux/amd64,linux/arm64

      - name: Archive Results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: artifacts
          path: api/target/failsafe-reports/

      ## Save the context information for use in Sonar analysis
      - name: Save Build Context
        run: |
          mkdir -v target
          echo "$GITHUB_CONTEXT" > target/build-context.json
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      ## Attach the target directory for use in Sonar analysis
      - name: Attach Build Output
        uses: actions/upload-artifact@v4
        with:
          name: target
          path: |
            **/target/
            !**/target/**/*.jar
            !**/target/failsafe-reports/**/*
            !**/target/surefire-reports/**/*

  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build UI Image
        uses: docker/build-push-action@v6
        with:
          context: ui/
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            streamshub/console-ui:latest
